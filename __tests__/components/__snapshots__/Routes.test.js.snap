// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Labbooks routes test callback 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "c9j9nc",
                "pathname": "/callback",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "c9j9nc",
              "pathname": "/callback",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "c9j9nc",
                      "pathname": "/callback",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "c9j9nc",
                    "pathname": "/callback",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/callback",
                      ]
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 80,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "c9j9nc",
              "pathname": "/callback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "c9j9nc",
            "pathname": "/callback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/callback",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "c9j9nc",
                                  "pathname": "/callback",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "c9j9nc",
                                "pathname": "/callback",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 81,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "c9j9nc",
                                  "pathname": "/callback",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "c9j9nc",
                                "pathname": "/callback",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/callback",
          ]
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Labbooks routes with data 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "p8m3zx",
                "pathname": "/labbooks/demo-lab-book/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "p8m3zx",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "p8m3zx",
                      "pathname": "/labbooks/demo-lab-book/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "p8m3zx",
                    "pathname": "/labbooks/demo-lab-book/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/labbooks/demo-lab-book/",
                      ]
        }
        relay={
                Object {
                        "forceFetch": [Function],
                        "getPendingTransactions": [Function],
                        "hasOptimisticUpdate": [Function],
                        "route": Object {
                          "name": "MockRoute",
                          "path": "/mock",
                        },
                        "setVariables": [Function],
                        "variables": Object {},
                      }
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 76,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "p8m3zx",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "p8m3zx",
            "pathname": "/labbooks/demo-lab-book/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/labbooks/demo-lab-book/",
          ],
          "relay": Object {
            "forceFetch": [Function],
            "getPendingTransactions": [Function],
            "hasOptimisticUpdate": [Function],
            "route": Object {
              "name": "MockRoute",
              "path": "/mock",
            },
            "setVariables": [Function],
            "variables": Object {},
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "p8m3zx",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "p8m3zx",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 77,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "p8m3zx",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "p8m3zx",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/labbooks/demo-lab-book/",
          ]
    }
    relay={
        Object {
            "forceFetch": [Function],
            "getPendingTransactions": [Function],
            "hasOptimisticUpdate": [Function],
            "route": Object {
              "name": "MockRoute",
              "path": "/mock",
            },
            "setVariables": [Function],
            "variables": Object {},
          }
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Labbooks routes without data 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "r39euy",
                "pathname": "/labbooks/demo-lab-book/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "r39euy",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "r39euy",
                      "pathname": "/labbooks/demo-lab-book/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "r39euy",
                    "pathname": "/labbooks/demo-lab-book/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/labbooks/demo-lab-book/",
                      ]
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 78,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "r39euy",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "r39euy",
            "pathname": "/labbooks/demo-lab-book/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/labbooks/demo-lab-book/",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "r39euy",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "r39euy",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 79,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "r39euy",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "r39euy",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/labbooks/demo-lab-book/",
          ]
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Routes Rendering 1`] = `
<div
  className="Routes"
>
  <div
    className="hidden"
  />
  <div
    className="hidden"
  >
    <div
      className="SideBar__inner-container"
    >
      <div
        className="SideBar__logo"
      />
      <ul
        className="SideBar__nav"
      >
        <li
          className="SideBar__list-item--selected"
        >
          <a
            className="SideBar__nav-item SideBar__nav-item--labbooks SideBar__nav-item--selected"
            href="/labbooks/all"
            onClick={[Function]}
          >
            <div
              className="SideBar__icon SideBar__icon--labbooks-selected"
            />
            LabBooks
          </a>
        </li>
        <li
          className="SideBar__list-item"
        >
          <div
            className="SideBar__nav-item SideBar__nav-item--datasets"
            to={
              Object {
                "pathname": "/datasets",
              }
            }
          >
            <div
              className="SideBar__icon SideBar__icon--datasets"
            />
            Datasets
          </div>
        </li>
      </ul>
    </div>
  </div>
  <div
    className="Routes__main-no-auth"
  >
    <div
      className="Home"
    >
      <div
        className="Login"
      >
        <div
          className="Login__panel"
        >
          <div
            className="Login__logo"
          />
          <button
            className="Login__button"
            onClick={[Function]}
          >
            Log In
          </button>
        </div>
      </div>
    </div>
    <div
      className="Prompt"
    >
      <div
        className="hidden"
      >
        <div
          className="Prompt__logo"
        />
        <div
          className="hidden"
        >
          Loading Please Wait...
        </div>
        <div
          className="hidden"
        >
          <div
            className="Prompt__failure-text"
          >
            <p>
              There was a problem loading Gigantum
            </p>
            <p>
              Ensure Gigantum is running or restart the application
            </p>
          </div>
        </div>
      </div>
    </div>
    <div
      className="Footer"
      id="footer"
    >
      <div
        className="Footer"
      >
        <div
          className="Footer__messages-section"
        >
          <div
            className="Footer__message-list Footer__message-list--collapsed"
          >
            <ul />
          </div>
        </div>
      </div>
      <div
        className="hidden"
      >
        <div
          className="Footer__upload-message"
        >
          
        </div>
        <div
          className="Footer__progress-bar"
          id="footerProgressBar"
          style={
            Object {
              "width": "undefined%",
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;
