// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Labbooks routes test callback 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "c9j9nc",
                "pathname": "/callback",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "c9j9nc",
              "pathname": "/callback",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "c9j9nc",
                      "pathname": "/callback",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "c9j9nc",
                    "pathname": "/callback",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/callback",
                      ]
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 80,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "c9j9nc",
              "pathname": "/callback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "c9j9nc",
            "pathname": "/callback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/callback",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "c9j9nc",
                                  "pathname": "/callback",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "c9j9nc",
                                "pathname": "/callback",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 81,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "c9j9nc",
                                  "pathname": "/callback",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "c9j9nc",
                                "pathname": "/callback",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/callback",
          ]
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Labbooks routes with data 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "p8m3zx",
                "pathname": "/labbooks/demo-lab-book/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "p8m3zx",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "p8m3zx",
                      "pathname": "/labbooks/demo-lab-book/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "p8m3zx",
                    "pathname": "/labbooks/demo-lab-book/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/labbooks/demo-lab-book/",
                      ]
        }
        relay={
                Object {
                        "forceFetch": [Function],
                        "getPendingTransactions": [Function],
                        "hasOptimisticUpdate": [Function],
                        "route": Object {
                          "name": "MockRoute",
                          "path": "/mock",
                        },
                        "setVariables": [Function],
                        "variables": Object {},
                      }
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 76,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "p8m3zx",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "p8m3zx",
            "pathname": "/labbooks/demo-lab-book/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/labbooks/demo-lab-book/",
          ],
          "relay": Object {
            "forceFetch": [Function],
            "getPendingTransactions": [Function],
            "hasOptimisticUpdate": [Function],
            "route": Object {
              "name": "MockRoute",
              "path": "/mock",
            },
            "setVariables": [Function],
            "variables": Object {},
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "p8m3zx",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "p8m3zx",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 77,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "p8m3zx",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "p8m3zx",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/labbooks/demo-lab-book/",
          ]
    }
    relay={
        Object {
            "forceFetch": [Function],
            "getPendingTransactions": [Function],
            "hasOptimisticUpdate": [Function],
            "route": Object {
              "name": "MockRoute",
              "path": "/mock",
            },
            "setVariables": [Function],
            "variables": Object {},
          }
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Labbooks routes without data 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Router
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "r39euy",
                "pathname": "/labbooks/demo-lab-book/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "r39euy",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Routes />
</Router>,
  "nodes": Array [
    <Router
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "r39euy",
                      "pathname": "/labbooks/demo-lab-book/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "r39euy",
                    "pathname": "/labbooks/demo-lab-book/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Routes />
</Router>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MemoryRouter
        initialEntries={
                Array [
                        "/labbooks/demo-lab-book/",
                      ]
        }
>
        <Routes />
</MemoryRouter>,
      "_debugID": 78,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MemoryRouter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "r39euy",
              "pathname": "/labbooks/demo-lab-book/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "r39euy",
            "pathname": "/labbooks/demo-lab-book/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Routes />,
          "initialEntries": Array [
            "/labbooks/demo-lab-book/",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "r39euy",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "r39euy",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
        "_debugID": 79,
        "_renderedOutput": <Router
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "r39euy",
                                  "pathname": "/labbooks/demo-lab-book/",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "r39euy",
                                "pathname": "/labbooks/demo-lab-book/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Routes />
</Router>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MemoryRouter
    initialEntries={
        Array [
            "/labbooks/demo-lab-book/",
          ]
    }
>
    <Routes />
</MemoryRouter>,
}
`;

exports[`Test Routes Rendering 1`] = `
<div
  className="Routes"
>
  <div
    className="Header flex flex--row justify--space-between"
  >
    <div
      className="flex justify--space-around flex-1-0-auto"
    >
      <ul
        className="Header__nav flex flex--row justify--space-between"
      >
        <li>
          <a
            className="Header__nav-item Header__nav-item--datasets flex flex--row justify--space-between"
            href="/datasets"
            onClick={[Function]}
          >
            <div
              className="Header__datasets-icon"
            />
            Datasets
          </a>
        </li>
        <li>
          <a
            className="Header__nav-item Header__nav-item--labbooks flex flex--row justify--space-between"
            href="/labbooks"
            onClick={[Function]}
          >
            <div
              className="Header__labbook-icon"
            />
            Lab Books
          </a>
        </li>
      </ul>
    </div>
  </div>
  <div
    className="Home"
  >
    <div
      className="Login"
    >
      <div
        className="Login__panel flex flex--column justify--space-around"
      >
        <button
          className="Login__button"
          onClick={[Function]}
        >
          Log In
        </button>
      </div>
    </div>
  </div>
  <div
    className="Footer"
    id="footer"
  >
    <div
      className="hidden"
    >
      NaN MB of NaN MB uploaded (undefined%)
    </div>
    <div
      className="Footer__progress-bar"
      id="footerProgressBar"
    />
  </div>
</div>
`;

exports[`Test Routes View Change renders header routes 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <BrowserRouter
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Switch>
        <Route
            path=""
            render={[Function]}
        />
    </Switch>
</BrowserRouter>,
  "nodes": Array [
    <BrowserRouter
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Switch>
            <Route
                  path=""
                  render={[Function]}
            />
      </Switch>
</BrowserRouter>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Routes />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Routes {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <BrowserRouter
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Switch>
                    <Route
                              path=""
                              render={[Function]}
                    />
          </Switch>
</BrowserRouter>,
        "_debugID": 2,
        "_renderedOutput": <BrowserRouter
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Switch>
                    <Route
                              path=""
                              render={[Function]}
                    />
          </Switch>
</BrowserRouter>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Routes />,
}
`;

exports[`Test Routes View Change renders header routes 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <BrowserRouter
    history={
        Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
    }
>
    <Switch>
        <Route
            path=""
            render={[Function]}
        />
    </Switch>
</BrowserRouter>,
  "nodes": Array [
    <BrowserRouter
      history={
            Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
      }
>
      <Switch>
            <Route
                  path=""
                  render={[Function]}
            />
      </Switch>
</BrowserRouter>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Routes />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Routes {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <BrowserRouter
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Switch>
                    <Route
                              path=""
                              render={[Function]}
                    />
          </Switch>
</BrowserRouter>,
        "_debugID": 2,
        "_renderedOutput": <BrowserRouter
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Switch>
                    <Route
                              path=""
                              render={[Function]}
                    />
          </Switch>
</BrowserRouter>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Routes />,
}
`;
